# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: ServerDeploy

on:
  push:
    branches: [ "Developers-Branch" ]
  pull_request:
    branches: [ "Developers-Branch" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm ci
    - run: mkdir zipped
    - name: Make envfile
      uses: skiddph/actions-env@v1.0.2
      with:
        file: .env
        prefix: 'ENV_'
      env:
        ENV_COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        ENV_DOCKER_PORT: ${{ VARS.DOCKER_PORT}}
        ENV_MONGOURL: ${{ secrets.MONGOURL}}
        ENV_PAPER_URL: ${{ VARS.PAPER_URL}}
        ENV_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
        ENV_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        ENV_AWS_AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN}}

    - name: Compress assets
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r zipped/zipped.zip .

    - name: deploy to Server
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
        username: ${{ secrets.HOST_USERNAME }}
        server: ${{ vars.HOST_IP }}
        ssh_private_key: ${{ secrets.EC2_SSH_KEY }}
        local_path: './zipped/*'
        remote_path: ${{ vars.HOST_TARGET_DIR_STAGING}}
        sftp_only: true
        sftpArgs: '-o ConnectTimeout=55'

    - name: Unzip on Server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ vars.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd ${{ vars.HOST_TARGET_DIR_STAGING }} && unzip -o zipped.zip -d .

    - name: Refresh Server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ vars.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          PAPER_URL=${{ VARS.PAPER_URL}}
          MONGOURL=${{ secrets.MONGOURL}}
          DBNAME=${{ secrets.DBNAME}}
          PORT=${{ VARS.PORT}}
          cd ${{ vars.HOST_TARGET_DIR_STAGING }}
          sudo docker compose down
          sudo docker compose up
